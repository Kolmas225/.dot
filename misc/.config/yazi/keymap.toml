[[manager.prepend_keymap]]
on = "a"
run = "plugin smart-enter"
desc = "Enter the child directory, or open the file"

[[manager.prepend_keymap]]
on = "<C-t>"
run = "plugin hide-preview"
desc = "Hide or show preview"

[[manager.prepend_keymap]]
on = ["c", "m"]
run = "plugin chmod"
desc = "Chmod on selected files"

[[manager.prepend_keymap]]
on = ["g", "r"]
run = '''
	shell 'ya pub dds-cd --str "$(git rev-parse --show-toplevel)"'
'''

[manager]
keymap = [
  { on = "<Esc>", run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
  { on = "q", run = "quit --no-cwd-file", desc = "Exit the process" },
  { on = "Q", run = "quit", desc = "Exit the process and goto cwd" },
  { on = "T", run = "close", desc = "Close the current tab, or quit if it is last tab" },

  # Hopping
  { on = "i", run = "arrow -1", desc = "Move cursor up" },
  { on = "e", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
  { on = "<C-f>", run = "arrow 100%", desc = "Move cursor down one page" },

  { on = "<S-PageUp>", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "<S-PageDown>", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<PageUp>", run = "arrow -100%", desc = "Move cursor up one page" },
  { on = "<PageDown>", run = "arrow 100%", desc = "Move cursor down one page" },

  { on = [
    "g",
    "g",
  ], run = "arrow top", desc = "Move cursor to the top" },
  { on = [
    "g",
    "e",
  ], run = "arrow bot", desc = "Move cursor to the bottom" },

  # Navigation
  { on = "n", run = "leave", desc = "Go back to the parent directory" },
  { on = "a", run = "enter", desc = "Enter the child directory" },

  { on = "<Left>", run = "leave", desc = "Go back to the parent directory" },
  { on = "<Right>", run = "enter", desc = "Enter the child directory" },

  { on = "N", run = "back", desc = "Go back to the previous directory" },
  { on = "A", run = "forward", desc = "Go forward to the next directory" },

  # Seeking
  { on = "I", run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = "E", run = "seek 5", desc = "Seek down 5 units in the preview" },

  # Selection
  { on = "m", run = [
    "toggle --state=on",
    "arrow 1",
  ], desc = "Select the current file" },
  { on = "M", run = "toggle_all --state=on", desc = "Select all files" },
  { on = "u", run = [
    "toggle --state=off",
    "arrow 1",
  ], desc = "Deselect the current file" },
  { on = "U", run = [
    "unyank",
    "toggle_all --state=off",
  ], desc = "Deselect (and unyank) all files" },

  # Operation
  { on = "o", run = "open", desc = "Open selected files" },
  { on = "O", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "<Enter>", run = "open", desc = "Open selected files" },
  { on = "<C-Enter>", run = "open --interactive", desc = "Open selected files interactively" },
  { on = "y", run = "yank", desc = "Yank selected files (copy)" },
  { on = "x", run = "yank --cut", desc = "Yank selected files (cut)" },
  { on = "p", run = "paste", desc = "Paste yanked files" },
  { on = "P", run = "paste --force", desc = "Paste yanked files (overwrite if the destination exists)" },
  { on = "-", run = "link", desc = "Symlink the absolute path of yanked files" },
  { on = "_", run = "link --relative", desc = "Symlink the relative path of yanked files" },
  { on = "<A-->", run = "hardlink", desc = "Hardlink yanked files" },
  { on = "d", run = "remove", desc = "Trash selected files" },
  { on = "D", run = "remove --permanently", desc = "Permanently delete selected files" },
  { on = "+", run = "create", desc = "Create a file (ends with / for directories)" },
  { on = "r", run = "rename --cursor=before_ext", desc = "Rename selected file(s)" },
  { on = ";", run = "shell --interactive", desc = "Run a shell command" },
  { on = ":", run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
  { on = ".", run = "hidden toggle", desc = "Toggle the visibility of hidden files" },
  { on = "s", run = "search fd", desc = "Search files by name using fd" },
  { on = "S", run = "search rg", desc = "Search files by content using ripgrep" },
  { on = "z", run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
  { on = "Z", run = "plugin fzf", desc = "Jump to a directory or reveal a file using fzf" },

  # Linemode
  { on = [
    "l",
    "s",
  ], run = "linemode size", desc = "Set linemode to size" },
  { on = [
    "l",
    "p",
  ], run = "linemode permissions", desc = "Set linemode to permissions" },
  { on = [
    "l",
    "c",
  ], run = "linemode btime", desc = "Set linemode to btime" },
  { on = [
    "l",
    "m",
  ], run = "linemode mtime", desc = "Set linemode to mtime" },
  { on = [
    "l",
    "o",
  ], run = "linemode owner", desc = "Set linemode to owner" },
  { on = [
    "l",
    "n",
  ], run = "linemode none", desc = "Set linemode to none" },

  # Copy
  { on = [
    "c",
    "c",
  ], run = "copy path", desc = "Copy the file path" },
  { on = [
    "c",
    "d",
  ], run = "copy dirname", desc = "Copy the directory path" },
  { on = [
    "c",
    "f",
  ], run = "copy filename", desc = "Copy the filename" },
  { on = [
    "c",
    "n",
  ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

  # Filter
  { on = "f", run = "filter --smart", desc = "Filter files" },

  # Find
  { on = "/", run = "find --smart", desc = "Find next file" },
  { on = "?", run = "find --previous --smart", desc = "Find previous file" },
  { on = "h", run = "find_arrow", desc = "Next find" },
  { on = "H", run = "find_arrow --previous", desc = "Previous find" },

  # Sorting
  { on = [
    ",",
    "m",
  ], run = [
    "sort mtime --reverse=no",
    "linemode mtime",
  ], desc = "Sort by mtime" },
  { on = [
    ",",
    "M",
  ], run = [
    "sort mtime --reverse",
    "linemode mtime",
  ], desc = "Sort by mtime (reverse)" },
  { on = [
    ",",
    "c",
  ], run = [
    "sort btime --reverse=no",
    "linemode btime",
  ], desc = "Sort by btime" },
  { on = [
    ",",
    "C",
  ], run = [
    "sort btime --reverse",
    "linemode btime",
  ], desc = "Sort by btime (reverse)" },
  { on = [
    ",",
    "e",
  ], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = [
    ",",
    "E",
  ], run = "sort extension --reverse", desc = "Sort by extension (reverse)" },
  { on = [
    ",",
    "a",
  ], run = "sort alphabetical --reverse=no", desc = "Sort alphabetically" },
  { on = [
    ",",
    "A",
  ], run = "sort alphabetical --reverse", desc = "Sort alphabetically (reverse)" },
  { on = [
    ",",
    "n",
  ], run = "sort natural --reverse=no", desc = "Sort naturally" },
  { on = [
    ",",
    "N",
  ], run = "sort natural --reverse", desc = "Sort naturally (reverse)" },
  { on = [
    ",",
    "s",
  ], run = [
    "sort size --reverse=no",
    "linemode size",
  ], desc = "Sort by size" },
  { on = [
    ",",
    "S",
  ], run = [
    "sort size --reverse",
    "linemode size",
  ], desc = "Sort by size (reverse)" },
  { on = [
    ",",
    "r",
  ], run = "sort random --reverse=no", desc = "Sort randomly" },

  # Goto
  { on = [
    "g",
    "h",
  ], run = "cd ~", desc = "Goto home directory" },
  { on = [
    "g",
    "c",
  ], run = "cd ~/.config", desc = "Goto .config" },
  { on = [
    "g",
    "y",
  ], run = "cd ~/.config/yazi", desc = "Goto yazi config" },
  { on = [
    "g",
    "s",
  ], run = "cd ~/src", desc = "Goto src directory" },
  { on = [
    "g",
    "d",
  ], run = "cd ~/Downloads", desc = "Goto downloads directory" },
  { on = [
    "g",
    "<Space>",
  ], run = "cd --interactive", desc = "Goto directory interactively" },

  # Tabs
  { on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },

  { on = "1", run = "tab_switch 0", desc = "Switch to the first tab" },
  { on = "2", run = "tab_switch 1", desc = "Switch to the second tab" },
  { on = "3", run = "tab_switch 2", desc = "Switch to the third tab" },
  { on = "4", run = "tab_switch 3", desc = "Switch to the fourth tab" },
  { on = "5", run = "tab_switch 4", desc = "Switch to the fifth tab" },
  { on = "6", run = "tab_switch 5", desc = "Switch to the sixth tab" },
  { on = "7", run = "tab_switch 6", desc = "Switch to the seventh tab" },
  { on = "8", run = "tab_switch 7", desc = "Switch to the eighth tab" },
  { on = "9", run = "tab_switch 8", desc = "Switch to the ninth tab" },

  { on = "[", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "]", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },

  { on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
  { on = "}", run = "tab_swap 1", desc = "Swap current tab with next tab" },

  # Tasks
  { on = "w", run = "tasks_show", desc = "Show task manager" },

]

# TODO
[tasks]
keymap = [
  { on = "<Esc>", run = "close", desc = "Close task manager" },
  { on = "<C-c>", run = "close", desc = "Close task manager" },
  { on = "q", run = "close", desc = "Close task manager" },

  { on = "i", run = "arrow -1", desc = "Move cursor up" },
  { on = "e", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
  { on = "x", run = "cancel", desc = "Cancel the task" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[pick]
keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel selection" },
  { on = "<C-c>", run = "close", desc = "Cancel selection" },
  { on = "<Enter>", run = "close --submit", desc = "Submit the selection" },

  { on = "i", run = "arrow -1", desc = "Move cursor up" },
  { on = "e", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[input]
keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel input" },
  { on = "<Enter>", run = "close --submit", desc = "Submit input" },

  # Character-wise movement
  { on = "<Left>", run = "move -1", desc = "Move back a character" },
  { on = "<Right>", run = "move 1", desc = "Move forward a character" },
  { on = "<C-b>", run = "move -1", desc = "Move back a character" },
  { on = "<C-f>", run = "move 1", desc = "Move forward a character" },

  # Word-wise movement
  { on = "<A-b>", run = "backward", desc = "Move back to the start of the current or previous word" },
  { on = "<A-f>", run = "forward", desc = "Move forward to the end of the current or next word" },

  # Line-wise movement
  { on = "<C-a>", run = "move -999", desc = "Move to the BOL" },
  { on = "<C-e>", run = "move 999", desc = "Move to the EOL" },
  { on = "<Home>", run = "move -999", desc = "Move to the BOL" },
  { on = "<End>", run = "move 999", desc = "Move to the EOL" },

  # Delete
  { on = "<Backspace>", run = "backspace", desc = "Delete the character before the cursor" },
  { on = "<Delete>", run = "backspace --under", desc = "Delete the character under the cursor" },
  { on = "<C-d>", run = "backspace --under", desc = "Delete the character under the cursor" },

  # Kill
  { on = "<C-u>", run = "kill bol", desc = "Kill backwards to the BOL" },
  { on = "<C-k>", run = "kill eol", desc = "Kill forwards to the EOL" },
  { on = "<A-Backspace>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
  { on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
  { on = "<A-d>", run = "kill forward", desc = "Kill forwards to the end of the current word" },

  # Cut/Yank/Paste
  { on = "<A-w>", run = "yank", desc = "Copy the selected characters" },
  { on = "<C-y>", run = "paste", desc = "Paste the copied characters after the cursor" },

  # Undo/Redo
  { on = "u", run = "undo", desc = "Undo the last operation" },
  { on = "U", run = "redo", desc = "Redo the last operation" },

  # Help
  { on = "<F1>", run = "help", desc = "Open help" },
]

[confirm]
keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel the confirm" },

  { on = "n", run = "close", desc = "Cancel the confirm" },
  { on = "y", run = "close --submit", desc = "Submit the confirm" },
]

[completion]
keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel completion" },
  { on = "<C-g>", run = "close", desc = "Cancel completion" },
  { on = "<Tab>", run = "close --submit", desc = "Submit the completion" },
  { on = "<Enter>", run = [
    "close --submit",
    "close_input --submit",
  ], desc = "Submit the completion and input" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  { on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<C-n>", run = "arrow 1", desc = "Move cursor down" },

  # Help
  { on = "~", run = "help", desc = "Open help" },
  { on = "<F1>", run = "help", desc = "Open help" },
]

[help]
keymap = [
  { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "q", run = "close", desc = "Exit the process" },
  { on = "<C-c>", run = "close", desc = "Hide the help" },

  # Navigation
  { on = "i", run = "arrow -1", desc = "Move cursor up" },
  { on = "e", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  # Filtering
  { on = "f", run = "filter", desc = "Apply a filter for the help items" },
]
